type Query {
  getAllCVs: [Cv!]!
  getCVById(id: ID!): Cv
}

type Cv {
  id: ID!
  name: String!
  age: Int!
  job: String!
  skills: [Skill!]!
  owner: User!
}

type Skill {
  id: ID!
  designation: String!
  cvs: [Cv!]!
}

type User {
  id: ID!
  name: String!
  email: String!
  role: ROLE
  cvs: [Cv!]!
}

enum ROLE {
  ADMIN
  USER
}

input AddCVInput {
  name: String!
  age: Int!
  job: String!
  ownerId: ID!
  skills: [ID!]!
}

input UpdateCVInput {
  id: ID!
  name: String
  age: Int
  job: String
  skills: [ID!]
}

input createSkill {
  designation: String!
}

input createUser {
  name: String!
  email: String!
  role: ROLE
}

type Mutation {
  addCV(input: AddCVInput!): Cv
  updateCV(input: UpdateCVInput!): Cv
  deleteCV(id: ID!): Cv
  createSkill(input: createSkill!): Skill
  createUser(input: createUser!): User
}


